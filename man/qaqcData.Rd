% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qaqcData.R
\name{qaqcData}
\alias{qaqcData}
\title{Apply basic QAQC procedures to a survey dataset}
\usage{
qaqcData(
  data,
  year,
  survey = c("ybfmp", "djfmp", "frp", "edsm", "sls", "20mm", "stn", "fmwt", "skt", "sms"),
  convertNames = F,
  officialGPS = NULL,
  gpsDistance = 0.5,
  startingGPSFormat = c("dms", "ddm"),
  towSchedule = NULL,
  meterSchedule = NULL,
  waterQualityVariables = c("BottomDepth", "WaterTemperature", "WaterTemperatureTop",
    "WaterTemperatureBottom", "SpecificConductance", "SpecificConductanceTop",
    "SpecificConductanceBottom", "Secchi", "TurbidityNTU", "TurbidityTopNTU",
    "TurbidityBottomNTU", "Salinity", "SalinityTop", "SalinityBottom"),
  stdev = 2,
  waterQualityGroupings = list("StationCode", c("StationCode", "Month"))
)
}
\arguments{
\item{data}{A data frame with the required data, dependent on what QAQC procedures
you want to run. It is advised to provide the fully joined/merged dataset.}

\item{year}{A filtering year.}

\item{survey}{Name of a qualifying IEP survey name. Currently explicit support
only for sls, 20mm, stn, fmwt, and bs.}

\item{convertNames}{T/F. Should the names be changed to their respective IEP recommended names}

\item{officialGPS}{Calculate outlying gps points if provided, defaulting to NULL.
A data frame containing the official GPS coordinates of the sampling stations.
Required to have at least three columns: \code{station}, \code{lat}, and \code{lon}. Coordinates
should be provided in degree decimals.}

\item{gpsDistance}{A value in miles indicating the threshold distance beyond which is an outlier.
Defaults to 0.5 miles}

\item{startingGPSFormat}{Either degrees, minutes, and seconds (dms) or degrees and decimal minutes (ddm).
Format of your GPS coordinates. This will be convert to decimal degrees}

\item{towSchedule}{Calculate outlying cable length values if provided.
A data frame containing the tow schedule. Several tow schedules
are provided in the package within the \code{towSchedule} list. See details.}

\item{meterSchedule}{Calculate outlying flow meter readings if provided.
A data frame containing the expected range for a meter reading
based on the duration of the tow. Several meter schedules are provided in the package
within the \code{meterSchedule} list. You can provide your own data frame following the format.}

\item{waterQualityVariables}{Calculate outlying water quality variables.}

\item{stdev}{Defaults to 2. The number of standard deviation away from the mean to flag as an outlying water quality value}

\item{waterQualityGroupings}{A list of grouping variables to iterate through the water quality check.
By default, calculates per station and per station and month.}
}
\value{
A list of objects containing identified outliers or rows with missing data points
}
\description{
Apply basic QAQC procedures to a survey dataset
}
\details{
For the \code{towSchedule} and \code{meterSchedule} arguments, you can use a schedules recorded
in the package (\code{towSchedule} or \code{meterSchedule}), currently
available only for center surveys, which were based on protocol documentation.
If not available, you can provide your own schedule. See the example on how to create
such a table.
}
\examples{
\dontrun{
# You can create your own tow schedule with the following code:
aTowSchedule <- data.frame(
maxDepth = c(10, 15, 20, 25, 30, 35, Inf),
depth = cut(c(10, 15, 20, 25, 30, 35, Inf),
breaks = c(0, 10, 15, 20, 25, 30, 35, Inf), right = T, include.lowest = T),
cableLength = c(0, 50, 100, 125, 150, 175, 200)
)

# An example using the CDFW 20 mm survey:
# Download the file and extract the required relationship and data tables:
# You will have to provide yourself with permissions to extract this table.

# Grab relationship schema from the Access database for default joins
tmmRelationship <- bridgeAccess(
file = "https://filelib.wildlife.ca.gov/Public/Delta\%20Smelt/20mm_New.zip",
tables = "MSysRelationships")[[1]]
# Grab relational tables of interest. The minimum should include station,
tow, and water sample data. Other columns are preserved but are not used
tmmTables <- bridgeAccess(file =
"https://filelib.wildlife.ca.gov/Public/Delta\%20Smelt/20mm_New.zip",
tables = c("Station", "Survey", "Tow", "Gear"))
tmmTables$`20mmStations` <- bridgeAccess(file =
"https://filelib.wildlife.ca.gov/Public/Delta\%20Smelt/20mm_New.zip",
tables = c("20mmStations"))[[1]]
officialGPS <- data.frame(
station = tmmTables$`20mmStations`$Station,
lat = decimalDegrees(paste(
tmmTables$`20mmStations`$LatD,
tmmTables$`20mmStations`$LatM,
tmmTables$`20mmStations`$LatS), type = "dms"),
lon = decimalDegrees(paste(
tmmTables$`20mmStations`$LonD,
tmmTables$`20mmStations`$LonM,
tmmTables$`20mmStations`$LonS
), type = "dms", isLongitude = T)
)

joinedTMM <- schemaJoin(tmmRelationship, tmmTables)
tmmQAQC <- qaqcData(data = joinedTMM, year = 2023, survey = "20mm",
 officialGPS = officialGPS, gpsDistance = 0.5, startingGPSFormat = "dms",
 towSchedule = towSchedule$`20mm`,
 meterSchedule = meterSchedule$`20mm`)
}
}
